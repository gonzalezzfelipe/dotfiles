# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1

set-option -g status-position top

set-option -g repeat-time 0

# Removes ESC delay
set -sg escape-time 0

# List of plugins
set -g @tpm_plugins '                    \
   caiogondim/maglev                     \
   tmux-plugins/tpm                      \
   tmux-plugins/tmux-sensible            \
   tmux-plugins/tmux-resurrect           \
   tmux-plugins/tmux-continuum           \
   tmux-plugins/tmux-yank                \
   tmux-plugins/tmux-pain-control        \
   tmux-plugins/tmux-copycat             \
   tmux-plugins/tmux-open                \
   tmux-plugins/tmux-battery             \
   tmux-plugins/tmux-cpu                 \
   tmux-plugins/tmux-prefix-highlight    \
'

# Remap prefix to Ctrl-a or Ctr-t depending on OS
is_mac="uname | grep -q Darwin"
if-shell "$is_mac" "set -g prefix C-a" "set -g prefix C-t"
unbind C-b
if-shell "$is_mac" "bind C-a send-prefix" "bind C-t send-prefix"

# Reload config file with prefix + a
bind a source ~/.tmux/tmux.conf \; display-message "Conf reloaded..."

#  }}}
# Options {{{

# Enable mouse, allow scrolling selected text and don't exit copy-mode when
# releasing selection
set -g mouse on
bind-key -T root WheelUpPane select-pane -t =\; copy-mode -e\; send-keys -M
unbind -T copy-mode-vi MouseDragEnd1Pane

# Increase Scrollback/History limit
set -g history-limit 50000

# Start window and pane numbering at 1
set -g base-index 1
setw -g pane-base-index 1

# Don't add delay when pressing meta or escape keys
set -s escape-time 0

# Renumber window automatically when a window is closed
set-option -g renumber-windows on

# Show the session name and the window title in iTerm corresponding tab and
# title
set -g set-titles on
set-option -g set-titles-string "#{session_name} - #W"

# Emacs key bindings in tmux command prompt
set -g status-keys emacs

# Use vim mode in copy mode
setw -g mode-keys vi

# Don't show `Activity in window N` message
set-option -g visual-activity off
set-window-option -g monitor-activity on

# Send focus events
set -g focus-events on

#  }}}
# Bindings {{{

# Smart pane switching with awareness of vim splits (use vim-tmux-navigator
# plugin in vim!)
#  TODO: Consider removing ssh
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|ssh|mosh|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"

# Restore original C-l mapping (clear screen)
bind C-l send-keys 'C-l'

# Split pane using v and h (in the same directory from where they are called)
# For horizontal splits we automatically set the size to rougly 10 lines
unbind '"'
unbind %
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"\; resize-pane -y 10

# Increase or decrease pane height with h,j,k and l (the -r flag makes it
# repeatable i.e no need to press prefix key again and again)
bind -r j resize-pane -D 3
bind -r k resize-pane -U 3
bind -r h resize-pane -L 3
bind -r l resize-pane -R 3
bind = select-layout -E

# Create new buffer/tab (actually a window) with kill it (also if pane) with c
bind b new-window -c "#{pane_current_path}"
unbind c
unbind x
bind x kill-pane

# Rename window
bind-key r command-prompt 'rename-window %%'

# Move windows
bind -r C-h swap-window -t -1
bind -r C-l swap-window -t +1

# Choose window (window tree navigation)
bind-key w choose-window

# Pane movement (merge and break)
bind-key m choose-window "join-pane -v -s "%%""  # horizontal merge
bind-key C-b break-pane

# Do visual and block selection as in vim (for block selection we need to press
# C-v + space and then start our selection)
unbind-key -Tcopy-mode-vi v
bind -Tcopy-mode-vi v send -X begin-selection
bind -Tcopy-mode-vi 'C-v' send -X rectangle-toggle

# Unbind Enter since we rebind it for copying
unbind-key -Tcopy-mode-vi Enter

# Unbind p since we rebind it to paste
unbind p
unbind n
# Use prefix + C-p to go to the previous window (and C-n to the next one)
bind -r C-p previous-window
bind -r C-n next-window

# Auto install tmux plugin manager if it is not installed
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm'"

# Initialize TMUX plugin manager
run '~/.tmux/plugins/tpm/tpm'
